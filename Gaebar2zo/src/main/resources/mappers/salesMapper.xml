<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itwillbs.mapper.salesMapper">

	<resultMap type="com.itwillbs.domain.TransactionVO" id="transMap">
		<id property="tran_num" column="tran_num" />
		<result property="tran_num" column="tran_num" />
		<result property="top_tran_num" column="top_tran_num" />
		<result property="cli_num" column="cli_num" />
		<result property="pic_username" column="pic_username" />
		<result property="expenditure" column="expenditure" />
		<result property="income" column="income" />
		<result property="tran_date" column="tran_date" />
		<result property="rec_date" column="rec_date" />
		<result property="rel_date" column="rel_date" />
		<result property="due_date" column="due_date" />
		<result property="ex_due_date" column="ex_due_date" />
		<result property="pro_status" column="pro_status" />
		<result property="tran_cate_code" column="tran_cate_code" />
		<result property="comm" column="comm" />
		<collection property="itemList" resultMap="itemMap"></collection>
		<collection property="clientList" resultMap="clientMap"></collection>
		<collection property="userList" resultMap="userMap"></collection>
	</resultMap>
	
	<resultMap type="com.itwillbs.domain.ItemVO" id="itemMap">
		<id property="item_num" column="item_num" />
		<result property="item_num" column="item_num" />
		<result property="item_cate_code" column="item_cate_code" />
		<result property="item_cli_code" column="item_cli_code" />
		<result property="item_name" column="item_name" />
		<result property="item_mat" column="item_mat" />
		<result property="comm" column="comm" />
		<collection property="tranGoodsList" resultMap="tranGoodsMap"></collection>
		<collection property="goodsList" resultMap="goodsMap"></collection>
	</resultMap>

	<resultMap type="com.itwillbs.domain.TransactionGoodsVO" id="tranGoodsMap">
		<id property="tran_num" column="tran_num" />
		<id property="goods_num" column="goods_num" />
		<result property="tran_num" column="tran_num" />
		<result property="goods_num" column="goods_num" />
		<result property="expenditure" column="expenditure" />
		<result property="income" column="income" />
		<result property="goods_qty" column="goods_qty" />
	</resultMap>

	<resultMap type="com.itwillbs.domain.ClientVO" id="clientMap">
		<id property="cli_num" column="cli_num" />
		<result property="cli_num" column="cli_num" />
		<result property="cli_name" column="cli_name" />
		<result property="cli_crn" column="cli_crn" />
		<result property="cli_cate" column="cli_cate" />
		<result property="cli_ind" column="cli_ind" />
		<result property="cli_add1" column="cli_add1" />
		<result property="cli_add2" column="cli_add2" />
		<result property="cli_tel" column="cli_tel" />
		<result property="cli_rep" column="cli_rep" />
		<result property="cli_email" column="cli_email" />
		<result property="pic_username" column="pic_username" />
		<result property="cli_id" column="cli_id" />
	</resultMap>

	<resultMap type="com.itwillbs.domain.UsersVO" id="userMap">
		<id property="username" column="username" />
		<result property="username" column="username" />
		<result property="user_per_name" column="user_per_name" />
		<result property="password" column="password" />
		<result property="user_email" column="user_email" />
		<result property="user_pos" column="user_pos" />
		<result property="user_phone" column="user_phone" />
		<result property="enabled" column="enabled" />
	</resultMap>

	<resultMap type="com.itwillbs.domain.GoodsVO" id="goodsMap">
		<id property="goods_num" column="goods_num" />
		<result property="goods_num" column="goods_num" />
		<result property="item_num" column="item_num" />
		<result property="goods_color" column="goods_color" />
		<result property="goods_size" column="goods_size" />
	</resultMap>

	<!-- 수주 리스트 -->
	<select id="salesOrderList" resultMap="transMap">
		select tran_num, cli_name, date(tran_date) "tran_date", date(rel_date) "rel_date", date(due_date) "due_date", income, user_per_name, pro_status
		from transaction t
		join client c on t.cli_num = c.cli_num
		join users u on t.pic_username = u.username
		where tran_cate_code = "SO"
		LIMIT #{pageStart}, #{pageSize}
	</select>

	<!-- 수주 리스트 총개수 세기 -->
	<select id="totalSalesOrderCount" resultType="int">
		select count(*) 
		from transaction t
		join client c on t.cli_num = c.cli_num
		join users u on t.pic_username = u.username
		where tran_cate_code = "SO"
	</select>
	
	<!-- 수주 등록_TransactionVO -->
	<insert id="salesOrderAdd_TransactionVO" useGeneratedKeys="true" keyProperty="tran_num">
		insert into transaction(tran_num, cli_num, pic_username, tran_date, ex_due_date, pro_status, tran_cate_code, comm)
		values(#{tran_num}, #{cli_num}, #{pic_username}, #{tran_date}, #{ex_due_date}, "수주 접수" , #{tran_cate_code}, #{comm})
	</insert>

	<!-- 수주 등록_TransactionGoodsVO -->
	<insert id="salesOrderAdd_TransactionGoodsVO">
		insert into transaction_goods(tran_num, goods_num, goods_qty)
		values((select tran_num from transaction where tran_id = #{tran_num}), #{goods_num}, #{goods_qty})
	</insert>

	<!-- 수주 정보 -->
	<select id="salesOrderInfo" resultMap="transMap">
		<![CDATA[
		select distinct t.tran_num, tran_date, rel_date, due_date, ex_due_date, income, username, user_per_name, t.cli_num, cli_name, pro_status, comm, tg.goods_num, tg.item_name, goods_size, goods_color, goods_qty 
		from (select tran_num, t.cli_num, cli_name, date(tran_date) "tran_date", date(rel_date) "rel_date", date(due_date) "due_date", date(ex_due_date) "ex_due_date", income, username, user_per_name, pro_status, comm  
			from transaction t 
			join users u on t.pic_username = u.username 
			join client c on t.cli_num = c.cli_num 
			where tran_cate_code = "SO") t 
		join (select tran_num, g.goods_num, i.item_name, goods_size, goods_color, goods_qty 
			from goods g 
			join item i on i.item_num = g.item_num 
			join transaction_goods tg on tg.goods_num = g.goods_num) tg 
		on t.tran_num =  tg.tran_num 
		where t.tran_num = #{tran_num}
		]]>
	</select>
	
	<!-- 수주 정보 수정_TransactionVO -->
	<update id="salesOrderUpdate_TransactionVO">
		update transaction 
		set cli_num = #{cli_num}, pic_username = #{pic_username}, tran_date = #{tran_date}, ex_due_date = #{ex_due_date}, comm = #{comm} 
		where tran_num = #{tran_num}
	</update>

	<!-- 수주 정보 수정_TransactionGoodsVO -->
	<update id="salesOrderUpdate_TransactionGoodsVO">
		update transaction_goods 
		set goods_qty = #{goods_qty} 
		where tran_num = #{tran_num} and goods_num = #{goods_num}
	</update>

	<!-- 발주 리스트 -->
	<select id="purchaseOrderList" resultMap="transMap">
		select tran_num, cli_name, date(tran_date) "tran_date", date(rel_date) "rel_date", date(due_date) "due_date", income, user_per_name, pro_status
		from transaction t
		join client c on t.cli_num = c.cli_num
		join users u on t.pic_username = u.username
		where tran_cate_code = "PO"
		LIMIT #{pageStart}, #{pageSize}
	</select>

	<!-- 발주 리스트 총개수 세기 -->
	<select id="totalPurchaseOrderCount" resultType="int">
		select count(*) 
		from transaction t
		join client c on t.cli_num = c.cli_num
		join users u on t.pic_username = u.username
		where tran_cate_code = "PO"
	</select>

	<!-- 발주 등록_TransactionVO -->
	<insert id="purchaseOrderAdd_TransactionVO" useGeneratedKeys="true" keyProperty="tran_num">
		insert into transaction(tran_num, cli_num, pic_username, tran_date, ex_due_date, pro_status, tran_cate_code, comm)
		values(#{tran_num}, #{cli_num}, #{pic_username}, #{tran_date}, #{ex_due_date}, "발주 예정" , #{tran_cate_code}, #{comm})
	</insert>

	<!-- 발주 등록_TransactionGoodsVO -->
	<insert id="purchaseOrderAdd_TransactionGoodsVO">
		insert into transaction_goods(tran_num, goods_num, goods_qty)
		values((select tran_num from transaction where tran_id = #{tran_num}), #{goods_num}, #{goods_qty})
	</insert>

	<!-- 발주 정보 -->
	<select id="purchaseOrderInfo" resultMap="transMap">
		<![CDATA[
		select distinct t.tran_num, tran_date, rel_date, due_date, ex_due_date, income, username, user_per_name, t.cli_num, cli_name, pro_status, comm, tg.goods_num, tg.item_name, goods_size, goods_color, goods_qty 
		from (select tran_num, t.cli_num, cli_name, date(tran_date) "tran_date", date(rel_date) "rel_date", date(due_date) "due_date", date(ex_due_date) "ex_due_date", income, username, user_per_name, pro_status, comm  
			from transaction t 
			join users u on t.pic_username = u.username 
			join client c on t.cli_num = c.cli_num 
			where tran_cate_code = "PO") t 
		join (select tran_num, g.goods_num, i.item_name, goods_size, goods_color, goods_qty 
			from goods g 
			join item i on i.item_num = g.item_num 
			join transaction_goods tg on tg.goods_num = g.goods_num) tg 
		on t.tran_num =  tg.tran_num 
		where t.tran_num = #{tran_num}
		]]>
	</select>
	
	<!-- 발주 정보 수정_TransactionVO -->
	<update id="purchaseOrderUpdate_TransactionVO">
		update transaction 
		set cli_num = #{cli_num}, pic_username = #{pic_username}, tran_date = #{tran_date}, ex_due_date = #{ex_due_date}, comm = #{comm} 
		where tran_num = #{tran_num}
	</update>

	<!-- 발주 정보 수정_TransactionGoodsVO -->
	<update id="purchaseOrderUpdate_TransactionGoodsVO">
		update transaction_goods 
		set goods_qty = #{goods_qty} 
		where tran_num = #{tran_num} and goods_num = #{goods_num}
	</update>

	<!-- tran_num 출력 -->
	<select id="getTranNum" resultType="String">
		<![CDATA[
			select DISTINCT CONCAT(#{tran_cate_code}, LPAD(MAX(CAST(SUBSTRING(tran_num, 3) AS UNSIGNED)) + 1, 3, '0')) from transaction
		]]>
	</select>

	
	<!-- 출하 정보 출력 -->
	<select id="shipmentList" resultMap="transMap">
        select ship_num,tran_num,ship_wh_code,ship_due_date,comm,ship_id
        from shipment
		LIMIT #{pageStart}, #{pageSize}
	</select>

	<!-- 출하 리스트 총개수 세기 -->
	<select id="getTotalShipmentCount" resultType="int">
		select count(*) 
      	from shipment
	</select>



</mapper>